#!/usr/bin/python3
# coding: utf-8
import hashlib
import sys


def banner():
    print(""" _   _           _     _           __        __            _
| | | | __ _ ___| |__ (_)_ __   __ \ \      / /__  _ __ __| |
| |_| |/ _` / __| '_ \| | '_ \ / _` \ \ /\ / / _ \| '__/ _` |
|  _  | (_| \__ \ | | | | | | | (_| |\ V  V / (_) | | | (_| |
|_| |_|\__,_|___/_| |_|_|_| |_|\__, | \_/\_/ \___/|_|  \__,_|
                               |___/
    """)


def ajuda():
    print("HashingWord, hash your words with:")
    print("""->md5 ->sha1 ->sha224 ->sha256 ->sha384
->sha512 ->sha3_224 ->sha3_256 ->sha3_384 ->sha3_512""")
    print("Parâmetros de uso:")
    print("\t-s || --single: criptografa apenas a palavra informada")
    print("\t\tpython hashing md5 --single 'João roubou pão'")
    print("\t\tpython hashing sha3_256 -s 'Na casa do João'")
    print("\t-m || --mults: processo recursivo de criptografia para seus inputs")
    print("\t\tpython hashing sha224 -m")
    print("\t\tpython hashing sha512 --mults")
    print("\t-w || --wordlist: criptografa todas as linhas de uma wordlist")
    print("\t\tpython hashing sha3_224 -w")
    print("\t\tpython hashing sha3_384 --wordlist")
    print("*As flags -w/--wordlist e -m/--mults geram um arquivo temporário")
    print("*em /tmp, nome: hashing_log")
    print("\nUso geral: python hashing [tipohash] [opcao] [path ou palavra]")


hashativa = [
    "hashlib.md5", "hashlib.sha1", "hashlib.sha224", "hashlib.sha256",
    "hashlib.sha384", "hashlib.sha512", "hashlib.sha3_224",
    "hashlib.sha3_256", "hashlib.sha3_384", "hashlib.sha3_512"
]


def decode_word(type_hash, hash_encode):
    dicionario_decode = {
        "hashlib.md5": hashlib.md5(str.encode(hash_encode)).hexdigest(),
        "hashlib.sha512": hashlib.sha512(str.encode(hash_encode)).hexdigest(),
        "hashlib.sha256": hashlib.sha256(str.encode(hash_encode)).hexdigest(),
        "hashlib.sha1": hashlib.sha1(str.encode(hash_encode)).hexdigest(),
        "hashlib.sha224": hashlib.sha224(str.encode(hash_encode)).hexdigest(),
        "hashlib.sha384": hashlib.sha384(str.encode(hash_encode)).hexdigest(),
        "hashlib.sha3_256": hashlib.sha3_256(str.encode(hash_encode)).hexdigest(),
        "hashlib.3_512": hashlib.sha3_512(str.encode(hash_encode)).hexdigest(),
        "hashlib.sha3_384": hashlib.sha3_384(str.encode(hash_encode)).hexdigest(),
        "hashlib3_224": hashlib.sha3_224(str.encode(hash_encode)).hexdigest()
    }
    return dicionario_decode[type_hash]


def abre_arquivo(path, type_hash, opt):
    contador = 0
    arqhash = open("/tmp/hashing_files.txt", 'w')
    loghash = []
    if opt == "wordlist":
        arq = open(path, 'r')
        texto = arq.readlines()
        for linha in texto:
            hash_encode_ = decode_word(type_hash, linha.replace("\n", ""))
            loghash.append(hash_encode_ + "\n")
            print(contador, "-", hash_encode_)
            contador += 1
    else:
        print("*Informe um espaço vazio para encerrar o loop")
        print("Informe suas palavras em '>_'")
        linha = 0
        while linha != " ":
            try:
                linha = input(">_ ")
            except KeyboardInterrupt:
                break
            hash_encode = decode_word(type_hash, linha.replace("\n", ""))
            if linha is " ":
                break
            loghash.append(hash_encode + "\n")
            print(contador, "-", hash_encode)
            contador += 1
    arqhash.writelines(loghash)
    arqhash.close()


if len(sys.argv) == 1:
    banner()
    ajuda()
    exit()

hash_type = 'hashlib.' + sys.argv[1]
hash_type = hash_type.lower()
interacao = sys.argv[2]

if hash_type not in hashativa or hash_type == "help" or hash_type == "--help" or hash_type == "-h":
    banner()
    ajuda()
    print("Tipo de Hash não está presente em Hashlib...", hash_type)
    exit()

banner()

if interacao == "-s" or interacao == "--single":
    var = sys.argv[3:len(sys.argv)]
    text = " ".join(var)
    var = decode_word(hash_type, ' '.join(var))
    print(text, "=", var)
    exit()

raiz_arquivo = ""
if interacao == "-m" or interacao == "--mults":
    opcao = "interativo"
    abre_arquivo(raiz_arquivo, hash_type, opcao)
elif interacao == "-w" or interacao == "--wordlist":
    raiz_arquivo = sys.argv[3]
    text = sys.argv[4:len(sys.argv)]
    opcao = "wordlist"
    abre_arquivo(raiz_arquivo, hash_type, opcao)
else:
    print("Parâmetros não reconhecidos...")
    exit()
